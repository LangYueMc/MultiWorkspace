buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'com.matthewprenger.cursegradle'

repositories {
    maven { url 'https://www.dogforce-games.com/maven/' }
    maven { // TOP
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
    maven {
        url = "https://modmaven.k-4u.nl"
    }
    maven { // JEI
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven { // Patchouli
        url "https://maven.blamejared.com"
    }
}

version = '1.0'
group = 'com.yourname.modid' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'modid'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'parchment', version: "2021.10.03-1.16.5"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('build/resources/main/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')
//            properties 'mixin.env.disableRefMap': 'true'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            // property 'forge.logging.console.level', 'debug'

            mods {
                //TheOneProbe {
                    //source project(':TheOneProbe').sourceSets.main
                //}
                McJtyLib {
                    source project(':McJtyLib').sourceSets.main
                }
                Ariente {
                    source project(':Ariente').sourceSets.main
                }
                //ArienteWorld {
                    //source project(':ArienteWorld').sourceSets.main
                //}
                //DeepResonance {
                    //source project(':DeepResonance').sourceSets.main
                //}
                HoloGui {
                    source project(':HoloGui').sourceSets.main
                }
                //InControl {
                    //source project(':InControl').sourceSets.main
                //}
                //FxControl {
                    //source project(':FxControl').sourceSets.main
                //}
                //RFToolsStorage {
                    //source project(':RFToolsStorage').sourceSets.main
                //}
                //RFToolsBase {
                    //source project(':RFToolsBase').sourceSets.main
                //}
                //RFToolsControl {
                    //source project(':RFToolsControl').sourceSets.main
                //}
                //RFToolsDimensions {
                    //source project(':RFToolsDimensions').sourceSets.main
                //}
                //RFToolsPower {
                    //source project(':RFToolsPower').sourceSets.main
                //}
                //RFToolsBuilder {
                    //source project(':RFToolsBuilder').sourceSets.main
                //}
                //RFToolsUtility {
                    //source project(':RFToolsUtility').sourceSets.main
                //}
                //Restrictions {
                    //source project(':Restrictions').sourceSets.main
                //}
                //LostCities {
                    //source project(':LostCities').sourceSets.main
                //}
                //ModXNet {
                    //source project(':ModXNet').sourceSets.main
                //}
            }
        }

        server {
            workingDirectory project.file('run')
//            properties 'mixin.env.disableRefMap': 'true'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            // property 'forge.logging.console.level', 'debug'

            mods {
                //TheOneProbe {
                    //source project(':TheOneProbe').sourceSets.main
                //}
                McJtyLib {
                    source project(':McJtyLib').sourceSets.main
                }
                Ariente {
                    source project(':Ariente').sourceSets.main
                }
                //ArienteWorld {
                    //source project(':ArienteWorld').sourceSets.main
                //}
                //DeepResonance {
                    //source project(':DeepResonance').sourceSets.main
                //}
                HoloGui {
                    source project(':HoloGui').sourceSets.main
                }
                //InControl {
                    //source project(':InControl').sourceSets.main
                //}
                //FxControl {
                    //source project(':FxControl').sourceSets.main
                //}
                //RFToolsStorage {
                    //source project(':RFToolsStorage').sourceSets.main
                //}
                //RFToolsBase {
                    //source project(':RFToolsBase').sourceSets.main
                //}
                //RFToolsControl {
                    //source project(':RFToolsControl').sourceSets.main
                //}
                //RFToolsDimensions {
                    //source project(':RFToolsDimensions').sourceSets.main
                //}
                //RFToolsPower {
                    //source project(':RFToolsPower').sourceSets.main
                //}
                //RFToolsBuilder {
                    //source project(':RFToolsBuilder').sourceSets.main
                //}
                //RFToolsUtility {
                    //source project(':RFToolsUtility').sourceSets.main
                //}
                //Restrictions {
                    //source project(':Restrictions').sourceSets.main
                //}
                //LostCities {
                    //source project(':LostCities').sourceSets.main
                //}
                //ModXNet {
                    //source project(':ModXNet').sourceSets.main
                //}
            }
        }

        data {
            workingDirectory project.file('run')
//            properties 'mixin.env.disableRefMap': 'true'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            // property 'forge.logging.console.level', 'debug'
            args '--all', '--output', file('src/generated/resources/'), '--existing', sourceSets.main.resources.srcDirs[0]

            mods {
                //TheOneProbe {
                    //source project(':TheOneProbe').sourceSets.main
                //}
                McJtyLib {
                    source project(':McJtyLib').sourceSets.main
                }
                Ariente {
                    source project(':Ariente').sourceSets.main
                }
                //ArienteWorld {
                    //source project(':ArienteWorld').sourceSets.main
                //}
                //DeepResonance {
                    //source project(':DeepResonance').sourceSets.main
                //}
                HoloGui {
                    source project(':HoloGui').sourceSets.main
                }
                //InControl {
                    //source project(':InControl').sourceSets.main
                //}
                //FxControl {
                    //source project(':FxControl').sourceSets.main
                //}
                //RFToolsStorage {
                    //source project(':RFToolsStorage').sourceSets.main
                //}
                //RFToolsBase {
                    //source project(':RFToolsBase').sourceSets.main
                //}
                //RFToolsControl {
                    //source project(':RFToolsControl').sourceSets.main
                //}
                //RFToolsDimensions {
                    //source project(':RFToolsDimensions').sourceSets.main
                //}
                //RFToolsPower {
                    //source project(':RFToolsPower').sourceSets.main
                //}
                //RFToolsBuilder {
                    //source project(':RFToolsBuilder').sourceSets.main
                //}
                //RFToolsUtility {
                    //source project(':RFToolsUtility').sourceSets.main
                //}
                //Restrictions {
                    //source project(':Restrictions').sourceSets.main
                //}
                //LostCities {
                    //source project(':LostCities').sourceSets.main
                //}
                //ModXNet {
                    //source project(':ModXNet').sourceSets.main
                //}
            }
        }
    }
}

jar {
  duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    compileOnly fg.deobf("mezz.jei:jei-${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${jei_version}")
    implementation fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}") {
        transitive = false
    }

//    implementation fg.deobf("curse.maven:wildnature:2837635")
//    implementation fg.deobf("curse.maven:voxelmap:2765032")
//    implementation fg.deobf("curse.maven:minimap:2849263")
//    implementation fg.deobf("curse.maven:xaero:2836597")

    //implementation project(':TheOneProbe')
    implementation project(':McJtyLib')
    implementation project(':Ariente')
    //implementation project(':ArienteWorld')
    //implementation project(':DeepResonance')
    implementation project(':HoloGui')
    //implementation project(':InControl')
    //implementation project(':FxControl')
    //implementation project(':LostCities')
    //implementation project(':RFToolsStorage')
    //implementation project(':RFToolsBase')
    //implementation project(':RFToolsControl')
    //implementation project(':RFToolsDimensions')
    //implementation project(':RFToolsPower')
    //implementation project(':RFToolsBuilder')
    //implementation project(':RFToolsUtility')
    //implementation project(':Restrictions')
    //implementation project(':ModXNet')
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "examplemod",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
